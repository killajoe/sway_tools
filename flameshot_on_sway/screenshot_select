#!/usr/bin/env bash
#
# screenshot_select - Screenshot helper for Sway
#
# Copyright (C) 2025 Johannes Kamprad
#
# This script is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This script is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this script.  If not, see <https://www.gnu.org/licenses/>.
#
# SPDX-License-Identifier: GPL-3.0-or-later
#
# Author: Johannes Kamprad (joekamprad)
#
# needed packages: `sudo pacman -Syu --needed grim slurp swappy xdg-user-dirs`
# this tool let you select rectangle area of your screen, 
# opens it in swappy to edit, and save it under users screenshot path.

# Try to get the XDG Pictures directory using xdg-user-dirs
PICTURES_DIR=$(xdg-user-dir PICTURES 2>/dev/null)

# If the command failed or returned empty, fallback to $HOME/Pictures
if [ -z "$PICTURES_DIR" ]; then
  PICTURES_DIR="$HOME/Pictures"
fi

DIR="$PICTURES_DIR/screenshots"
mkdir -p "$DIR"
FILENAME="screenshot_$(date '+%Y-%m-%d_%H-%M-%S').png"
TARGET="$DIR/$FILENAME"

# tmp file
TMPFILE="/tmp/swappy_$$.png"

# take screenshot and save as tmp
grim -g "$(slurp)" "$TMPFILE"

# open in swappy
swappy -f "$TMPFILE"

# checking if swappy saved something
# usually under $HOME/  directly
LATEST=$(ls -t "$HOME"/swappy-*.png 2>/dev/null | head -n1)

if [ -f "$LATEST" ]; then
    mv "$LATEST" "$TARGET"
    wl-copy < "$TARGET"
    notify-send "Screenshot saved and copied to clipboard" "$TARGET" -i "$TARGET"
    echo "Saved & copied: $TARGET"
else
    notify-send -i dialog-warning "Screenshot canceled or not saved"
    echo "No screenshot saved."
fi

# cleanup
rm -f "$TMPFILE"
